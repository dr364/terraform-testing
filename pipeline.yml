---
resources:
- name: terraform-repo
  type: git
  source:
    uri: ((terraform-git-uri))
    branch: ((terraform-branch-name))

- name: pre-commit-repo
  type: git
  source:
    uri: https://github.com/antonbabenko/pre-commit-terraform.git
    branch: master

jobs:
- name: static-checks
  plan:
  - get: terraform-repo
    trigger: true
  - get: pre-commit-repo
    trigger: false
  - task: create-pre-commit-config
    config:
      platform: linux
      inputs:
      - name: pre-commit-repo
      image_resource:
        type: registry-image
        source: { repository: alpine/git }
      run:
        path: sh
        args:
        - -exc
        - |
          mkdir -p pre-commit-config && \
          cat <<EOF > pre-commit-config/.pre-commit-config.yaml
          repos:
          - repo: ../pre-commit-repo
            rev: ((pre-commit-repo-version))
            hooks:
              - id: terraform_fmt
              - id: terraform_validate
              - id: terraform_tflint
          EOF

      outputs:
        - name: pre-commit-config
  - task: pre-commit-checks
    config:
      platform: linux
      inputs:
      - name: terraform-repo
      - name: pre-commit-repo
      - name: pre-commit-config
      image_resource:
        type: docker-image
        source: {repository: dr364/terraform-testing, tag: 0.1.3}
      params:
        AWS_DEFAULT_REGION: ((aws-region)) # Required for init of AWS provider config for terraform validate pre-commit hook
      run:
        path: sh
        args:
        - -exc
        - |
          cd terraform-repo && \
          if [ -e .pre-commit-config.yaml ]
          then
            pre-commit run --all-files
          else
            pre-commit run -c ../pre-commit-config/.pre-commit-config.yaml --all-files
          fi
  - task: static-security-checks
    config:
      platform: linux
      inputs:
      - name: terraform-repo
      image_resource:
        type: docker-image
        source: {repository: dr364/terraform-testing, tag: 0.1.3}
      run:
        path: sh
        args:
        - -exc
        - |
          cd terraform-repo && \
          terrascan scan

- name: tests
  plan:
  - get: terraform-repo
    passed:
    - static-checks
    trigger: true
  - task: run-unit-tests
    config:
      platform: linux
      inputs:
      - name: terraform-repo
      image_resource:
        type: docker-image
        source: {repository: dr364/terraform-testing, tag: 0.1.3}
      params:
        # Temporary keys should be generated for running this task
        AWS_DEFAULT_REGION: ((aws-region))
        AWS_ACCESS_KEY_ID: ((aws-access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-secret-access-key))
      run:
        path: sh
        args:
        - -exc
        - |
          cp -R terraform-repo $GOPATH/src && \
          cd $GOPATH/src/terraform-repo/test && \
          go mod init && \
          go test -v -tags=unit
  - task: run-integration-tests
    config:
      platform: linux
      inputs:
      - name: terraform-repo
      image_resource:
        type: docker-image
        source: {repository: dr364/terraform-testing, tag: 0.1.3}
      params:
        # Temporary keys should be generated for running this task
        AWS_DEFAULT_REGION: ((aws-region))
        AWS_ACCESS_KEY_ID: ((aws-access-key-id))
        AWS_SECRET_ACCESS_KEY: ((aws-secret-access-key))
      run:
        path: sh
        args:
        - -exc
        - |
          cp -R terraform-repo $GOPATH/src && \
          cd $GOPATH/src/terraform-repo/test && \
          go mod init && \
          go test -v -tags=integration
